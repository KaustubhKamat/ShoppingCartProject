package com.niit.shoppingcart.DAOImpl;

import java.util.List;

import javax.transaction.Transactional;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.niit.shoppingcart.DAO.Employee_TestDAO;
import com.niit.shoppingcart.model.Category;

public class Employee_TestDAOImpl implements Employee_TestDAO {

	@Autowired
	private SessionFactory sessionFactory1;
	
	public public Employee_TestDAOImpl() {
		// TODO Auto-generated constructor stub
	}(SessionFactory sessionFactory)
	{
		this.sessionFactory1=sessionFactory1;
	}
	
	@SuppressWarnings("unchecked")
	@Transactional
	public List<Category> list() {
		String hql= "from Category";
		Query query=sessionFactory1.getCurrentSession().createQuery(hql);
		return query.list();
	}

	@Transactional
	public Category get(String id) {
		return (Category) sessionFactory1.getCurrentSession().get(Category.class, id);
		
	}

	//SELECT * FROM CATEGORY where emailid='niit' 
	@Transactional
	public Category validate(String id) {
		String hql= "SELECT * FROM CATEGORY where emailid='" + id +"'";
		Query query=sessionFactory1.getCurrentSession().createQuery(hql);
		return (Category) query.uniqueResult();
	}

	@Transactional
	public boolean save(Category category) 
	{
		try {
			sessionFactory1.getCurrentSession().save(category);
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
		
	}

	@Transactional
	public boolean update(Category category) {
		
		try {
			sessionFactory1.getCurrentSession().update(category);
		} catch (HibernateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		return true;
	}

	@Transactional
	public boolean delete(Category category)
	{
		
		try {
			sessionFactory1.getCurrentSession().delete(category);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		return true;
		
	}
}

	}


